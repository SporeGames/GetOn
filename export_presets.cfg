[preset.0]

name="HTML5"
platform="HTML5"
runnable=true
custom_features=""
export_filter="all_resources"
include_filter=""
exclude_filter=""
export_path="Export/GetOn.html"
script_export_mode=1
script_encryption_key=""

[preset.0.options]

custom_template/debug=""
custom_template/release=""
variant/export_type=0
vram_texture_compression/for_desktop=true
vram_texture_compression/for_mobile=false
html/export_icon=true
html/custom_html_shell=""
html/head_include="<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\"></script>
<script>
engine.addInterface(\"jspdf\", jspdf);

function print(jsonString) {
    const { jsPDF } = window.jspdf;

    const doc = new jsPDF();
    const data = JSON.parse(jsonString);

    doc.addImage('/assets/HNU.png', 'png', 150, 0, 48, 32);
    let currentY = 10;
    doc.setFontSize(26);
    doc.text(data.Name || '', 10, currentY);
    currentY += 10;
    doc.setFontSize(20);
    doc.text(data.SelectedSpecialization || '', 10, currentY);
    currentY += 10;

    doc.setFontSize(16);
    doc.text(data.TotalTime || '', 10, currentY);
	currentY += 10;
    doc.text('Total Points: ' + data.TotalPoints || '', 10, currentY);
    currentY += 15;

    if (!Array.isArray(data.Categories)) {
        console.error('Data.Categories is not an array');
        return;
    }

    var categoryCount = 0;
    var currentX = 0;

    data.Categories.forEach((category, index) => {
        if (categoryCount >= 3) {
            currentX = 100;
            if (categoryCount == 3) {
                currentY = 55;
            }
        }
        console.log('Category.Items:', category.Items);
        doc.setFontSize(16);
        doc.text(category.Title || '', currentX + 30, currentY);

        // Use addImage method to directly add images from URL
        let fileName = category.Title.replace(\" \", \"_\");
        doc.addImage('/assets/' + fileName + '.png', 'png', currentX + 10, currentY - 12, 16, 16);

        currentY += 7;
        categoryCount++;

        category.Items.forEach((item, index) => {
            doc.setFontSize(12);
            doc.text((item.Title || '') + ': ' + (item.Text || ''), currentX + 30, currentY);
            currentY += 7;
        });
        currentY += 7; // Bit more space between categories
    });
	currentY += 5;
	doc.addImage('/assets/Art.png', 'png', 10, currentY - 12, 16, 16);
	doc.setFontSize(16);
	doc.text('Art', 30, currentY);
	currentY += 7;
	doc.setFontSize(12);
	doc.text('8 pages uploaded.', 30, currentY);

    doc.setFontSize(24);
    doc.text('Best: ' + data.BestName, 50, currentY + 20);
    doc.setFontSize(18);
    doc.text('Points: ' + data.BestPoints, 50, currentY + 30);

    // Use addImage method to directly add images from URL
    let bestFileName = data.BestName.replace(\" \", \"_\");
    doc.addImage('/assets/' + bestFileName + '.png', 'png', 10, currentY + 10, 24, 24);

    doc.setFontSize(10);
    doc.setTextColor(200, 200, 200); // Set text color to light gray
    doc.text(data.Hash, 10, doc.internal.pageSize.getHeight() - 10);

    const now = new Date();
    const dateTimeString = now.getFullYear() + '-' + (now.getMonth() + 1) + '-' + now.getDate() + '_' + now.getHours() + '-' + now.getMinutes() + '-' + now.getSeconds();
    doc.save((data.Name || 'output') + '_' + dateTimeString + '.pdf');
}
</script>
"
html/canvas_resize_policy=2
html/focus_canvas_on_start=true
html/experimental_virtual_keyboard=false
progressive_web_app/enabled=false
progressive_web_app/offline_page=""
progressive_web_app/display=1
progressive_web_app/orientation=0
progressive_web_app/icon_144x144=""
progressive_web_app/icon_180x180=""
progressive_web_app/icon_512x512=""
progressive_web_app/background_color=Color( 0, 0, 0, 1 )
